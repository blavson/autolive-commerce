{%  extends "base.html.twig" %}
{% block body %}
    <div class="row mt-4">
        <div class="col-md-3">
            {{ form(myform) }}
        </div>
        <div class="col-md-9">
            <div class="row">
                {% if cars is empty %}
                  <h2>Specific models are not available</h2>
                {%  else %}
                {% for car in cars %}
                    <div class="col-md-4">

                            <div class="card" style="width: 18rem;">
                                <a href="{{ path("show_car", { 'car_id' : car.getId() } ) }}"> <img class="card-img-top" src="{{ car.getImage() }}" alt="car model"> </a>
                            <div class="card-body">
                                <h5 class="card-title">{{ car.getCarMaker() }} {{  car.getModel() }}</h5>
                                <p class="card-text">{{  car.getDescription() }}</p>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">Price : {{ car.getPrice() }}</li>
                                <li class="list-group-item">Mileage : {{ car.getMileage() }}</li>
                            </ul>
                        </div>

                    </div>
                {%  endfor %}
             {%  endif  %}
            </div>
        </div>
    </div>

{%  endblock %}

{% block bottomscript %}
<script>
    let makerSelect = document.homepage_form.homepage_form_car_makers;
    let modelSelect = document.homepage_form.homepage_form_car_models;

    makerSelect.addEventListener('change',   async (event) => {
        let maker_id = event.target.value;
        const response = await fetch('http://localhost:8000/get_models_by_maker?maker_id=' + maker_id, { } )
             .then(response => response.json())

            let result = Object.keys(response).map((key) => [String(key), response[key]]);
            // console.log(result)
            modelSelect.innerHTML='';
            let allmodels = document.createElement("option");
            allmodels.text ="All Model";//item.whateverProperty
            allmodels.value = 0;
            modelSelect.add(allmodels);
            result.forEach(function (item) {
                console.log("item = ", item)
                let newOption = document.createElement("option");
                newOption.text = item[0].toString();//item.whateverProperty
                newOption.value = item[1].toString();
                modelSelect.add(newOption);
            });
            //new select items should populated immediately
        return response;

    })
        // console.log(hpAction, hpMethod);

</script>
{% endblock %}